

library('ggvis')
library('tidyverse')
library('ggplot2')
bike_buyers = read.csv('bike_buyers.csv', header=T, na.strings='')
head(bike_buyers)
summary(bike_buyers)
bike_buyers$Gender

bike_buyers$Marital.Status <- as.factor(bike_buyers$Marital.Status)
bike_buyers$Gender <- as.factor(bike_buyers$Gender)
bike_buyers$Home.Owner <- as.factor(bike_buyers$Home.Owner)
bike_buyers$Purchased.Bike <- as.factor(bike_buyers$Purchased.Bike)

str(bike_buyers)
colSums(is.na(bike_buyers))
summary(bike_buyers)
#Viewing trends in attributes with NA values
hist(bike_buyers$Income)
hist(bike_buyers$Children, breaks = 20)

hist(bike_buyers$Age)

# Dealing with NA values
# Since, the distribution of Income and Age is left-skewed. We will impute median values

median(na.omit((bike_buyers$Income)))
median(na.omit((bike_buyers$Age)))

bike_buyers_clean <- bike_buyers

colSums(is.na(bike_buyers_clean))

# Income replaced with Median
bike_buyers_clean$Income[is.na(bike_buyers_clean$Income)] <- 
  median(na.omit((bike_buyers$Income)))
  
# Age replaced with Median
bike_buyers_clean$Age[is.na(bike_buyers_clean$Age)] <- 
  median(na.omit((bike_buyers$Age)))

colSums(is.na(bike_buyers_clean))

# Mode function
# Since mode is not an inbuilt function in R, we write a function which calculates the maximum frequency of unique values in every column.

# tabulate count the number of occurrence of elements in a vector
# match returns a vector of the positions of (first) matches of its first argument in its second.

unique_x <- unique(bike_buyers$Marital.Status)
unique_x
tabulate_x <- tabulate(match(bike_buyers$Marital.Status, unique_x))
tabulate_x
get_mode <- function(x) {                 
  unique_x <- unique(x)
  tabulate_x <- tabulate(match(x, unique_x))
  unique_x[tabulate_x == max(tabulate_x)]
}

# Marital Status replaced with Mode
bike_buyers_clean$Marital.Status[is.na(bike_buyers_clean$Marital.Status)] <- 
  get_mode(bike_buyers$Marital.Status)

# Gender replaced with Mode
bike_buyers_clean$Gender[is.na(bike_buyers_clean$Gender)] <- 
  get_mode(bike_buyers$Gender)

# Children replaced with Mode
bike_buyers_clean$Children[is.na(bike_buyers_clean$Children)] <- 
  get_mode(bike_buyers$Children)

# Home Owner replaced with Mode
bike_buyers_clean$Home.Owner[is.na(bike_buyers_clean$Home.Owner)] <- 
  get_mode(bike_buyers$Home.Owner)

colSums(is.na(bike_buyers_clean))

write.csv(bike_buyers_clean,"bike_buyers_clean.csv", quote = FALSE, row.names = TRUE)

bike_buyers <- bike_buyers_clean


# Bar Plot

# A bar plot is a plot that presents categorical data with rectangular bars with lengths proportional to the values that they represent. A bar plot shows comparisons among discrete categories. One axis of the plot shows the specific categories being compared, and the other axis represents a measured value.

counts <- table(bike_buyers$Cars, bike_buyers$Gender)
barplot(counts, main = '',
        xlab="Number of Gears",
        legend = rownames(counts))


# Scatter Plot
# A scatter plot uses dots to represent values for two different numeric variables. The position of each dot on the horizontal and vertical axis indicates values for an individual data point. Scatter plots are used to observe relationships between variables.

plot(bike_buyers$Income, type= "p")




#Density Plot

#A density plot is a representation of the distribution of a numeric variable. It uses a kernel density estimate to show the probability density function of the variable (see more). It is a smoothed version of the histogram and is used in the same concept.

plot(density(bike_buyers$Income), main='Income Density Spread')

